// SmartReorder.cs - Automated reordering system
using Domain.Common;
using System;

namespace Domain.Models
{
    public class SmartReorder : BaseDomainEntity
    {
        public required int ItemId { get; set; }
        public virtual Item? Item { get; set; }
        
        public required int GodownId { get; set; }
        public virtual Godown? Godown { get; set; }
        
        public required int SupplierId { get; set; }
        public virtual Supplier? Supplier { get; set; }
        
        public required DateTime ReorderDate { get; set; }
        public required decimal CurrentStock { get; set; }
        public required decimal ReorderPoint { get; set; }
        public required decimal ReorderQuantity { get; set; }
        
        // Smart calculations
        public decimal EconomicOrderQuantity { get; set; }
        public decimal SafetyStock { get; set; }
        public decimal LeadTimeDemand { get; set; }
        public decimal AverageLeadTime { get; set; }
        
        public required string ReorderReason { get; set; } // LOW_STOCK, FORECAST, SEASONAL, MANUAL
        public required string Status { get; set; } // PENDING, APPROVED, ORDERED, RECEIVED, CANCELLED
        
        public decimal EstimatedCost { get; set; }
        public DateTime? ExpectedDelivery { get; set; }
        public DateTime? ActualDelivery { get; set; }
        
        public bool IsAutoGenerated { get; set; } = true;
        public decimal ConfidenceScore { get; set; } = 1.0m;
        public string? Notes { get; set; }

        // Add backward compatibility properties as settable
        public decimal RecommendedQuantity { get; set; }
        public decimal LeadTime { get; set; }
        public string Priority { get; set; } = "Medium";
        public DateTime GeneratedDate { get; set; }
    }
}